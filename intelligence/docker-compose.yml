version: '3.8'

services:
  intelligence-engine:
    build:
      context: .
      dockerfile: Dockerfile
    image: intelligence-engine:latest
    container_name: intelligence-engine
    ports:
      - "50051:50051"  # gRPC port
      - "8080:8080"    # Metrics port
    volumes:
      # Mount config directory
      - ./config:/app/config:ro
      # Mount models directory for persistence
      - intelligence-models:/app/models
      # Mount logs directory
      - ./logs:/app/logs
    environment:
      # Logging
      - INTELLIGENCE_LOG_LEVEL=INFO
      
      # gRPC configuration
      - INTELLIGENCE_GRPC_HOST=0.0.0.0
      - INTELLIGENCE_GRPC_PORT=50051
      - INTELLIGENCE_GRPC_MAX_WORKERS=10
      
      # Performance
      - INTELLIGENCE_ENABLE_METRICS=true
      - INTELLIGENCE_METRICS_PORT=8080
      
      # Pattern detection
      - INTELLIGENCE_PATTERN_MIN_CONFIDENCE=0.7
      - INTELLIGENCE_PATTERN_ENABLE_CACHING=true
      
      # Query generation
      - INTELLIGENCE_QUERY_CACHE_SIZE=100
      - INTELLIGENCE_QUERY_OPTIMIZER_MODE=balanced
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import grpc; channel = grpc.insecure_channel('localhost:50051'); channel.channel_ready()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - intelligence-network
    cpu_count: 2
    mem_limit: 2g

  # Optional: Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: intelligence-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - intelligence-network
    depends_on:
      - intelligence-engine

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: intelligence-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - intelligence-network
    depends_on:
      - prometheus

networks:
  intelligence-network:
    driver: bridge

volumes:
  intelligence-models:
  prometheus-data:
  grafana-data: